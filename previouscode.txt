// package main

// import (
// 	"fmt"
// 	"log"
// 	"net/http"
// 	"path/filepath"

// 	"github.com/Pruthvij008/backendgolang/views"
// )

// func executeTemplate(w http.ResponseWriter, filepath string) {
// 	t, err := views.Parse(filepath)

// 	if err != nil {
// 		log.Printf("parsing template : %v", err)
// 		http.Error(w, "there was error parsing the template", http.StatusInternalServerError)
// 		return
// 	}
// 	t.Execute(w, nil)
// }

// func handlerfunction(w http.ResponseWriter, r *http.Request) {
// 	tpl := filepath.Join("templates", "home.gohtml")
// 	executeTemplate(w, tpl)
// }

// func contactHandler(w http.ResponseWriter, _ *http.Request) {
// 	tpl := filepath.Join("templates", "contact.gohtml")
// 	executeTemplate(w, tpl)
// }

// type Router struct{}

// func (router Router) ServeHTTP(w http.ResponseWriter, r *http.Request) { // Corrected method name
// 	switch r.URL.Path {
// 	case "/":
// 		handlerfunction(w, r)
// 	case "/contact":
// 		contactHandler(w, r)
// 	default:
// 		http.Error(w, "PAGE NOT FOUND", http.StatusNotFound)
// 	}
// }

// func main() {

//		var router Router
//		fmt.Println("Starting the server on port 3000")
//		http.ListenAndServe(":3000", router)
//	}
// package main

// import (
// 	"fmt"
// 	"net/http"
// 	"path/filepath"

// 	"github.com/Pruthvij008/backendgolang/controllers"
// 	"github.com/Pruthvij008/backendgolang/views"
// 	"github.com/go-chi/chi/v5"
// )

// func main() {
// 	r := chi.NewRouter()

//		r.Get("/", controllers.StaticHandler(views.Must(views.Parse(filepath.Join("templates", "home.gohtml")))))
//		r.Get("/contact", controllers.StaticHandler(views.Must(views.Parse(filepath.Join("templates", "contact.gohtml")))))
//		r.NotFound(func(w http.ResponseWriter, r *http.Request) {
//			http.Error(w, "page not found", http.StatusNotFound)
//		})
//		// Start server
//		fmt.Println("Starting the server on port 3000")
//		http.ListenAndServe(":3000", r)
//	}